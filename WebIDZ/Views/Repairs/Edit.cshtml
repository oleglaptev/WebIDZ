@model WebIDZ.Models.ViewModels.RepairVM

@{
    ViewBag.Title = "Редактировать ремонт";
}

<h2 class="text-center">@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container mt-4">
        <div class="card mx-auto" style="max-width: 600px;">
            <div class="card-header bg-primary text-white text-center">
                Редактирование ремонта
            </div>
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID_ремонта)

                <!-- Название оборудования (только для просмотра) -->
                <div class="form-group row justify-content-center">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Название_оборудования, htmlAttributes: new { @class = "col-form-label fw-bold" })
                        <p class="form-control-static form-control bg-light">@Model.Название_оборудования</p>
                    </div>
                </div>

                <!-- Инвентарный номер (только для просмотра) -->
                <div class="form-group row justify-content-center">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Инвентарный_номер, htmlAttributes: new { @class = "col-form-label fw-bold" })
                        <p class="form-control-static form-control bg-light">@Model.Инвентарный_номер</p>
                    </div>
                </div>

                <!-- Выбор мастера -->
                <div class="form-group row justify-content-center">
                    <div class="col-md-10">
                        @Html.Label("ID_мастера", "Мастер", htmlAttributes: new { @class = "col-form-label fw-bold" })
                        @Html.DropDownList("ID_мастера", (IEnumerable<SelectListItem>)ViewBag.MasterList, "Выберите мастера", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ID_мастера, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Дата начала -->
                <div class="form-group row justify-content-center">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Дата_начала, htmlAttributes: new { @class = "col-form-label fw-bold" })
                        @Html.TextBoxFor(model => model.Дата_начала, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                        @Html.ValidationMessageFor(model => model.Дата_начала, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Дата окончания -->
                <div class="form-group row justify-content-center">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Дата_окончания, htmlAttributes: new { @class = "col-form-label fw-bold" })

                        <!-- Условие для формата даты -->
                        @if (Model.Дата_окончания.HasValue)
                        {
                            @Html.TextBoxFor(model => model.Дата_окончания, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.Дата_окончания, "", new { @class = "form-control", type = "date" })
                        }

                        @Html.ValidationMessageFor(model => model.Дата_окончания, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Выбор работ -->
                <div class="form-group row justify-content-center">
                    <div class="col-md-10">
                        <label class="col-form-label fw-bold">Работы:</label>
                        @foreach (var work in (List<SelectListItem>)ViewBag.WorkList)
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="selectedWorks" value="@work.Value" @(work.Selected ? "checked" : "") />
                                <label class="form-check-label">@work.Text</label>
                            </div>
                        }
                    </div>
                </div>

                <!-- Кнопки -->
                <div class="form-group row justify-content-center">
                    <div class="col-md-10">
                        <button type="submit" class="btn btn-success mr-2 mt-3">Сохранить</button>
                        @Html.ActionLink("Назад к списку", "Index", null, new { @class = "btn btn-secondary mt-3" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}